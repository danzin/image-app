services:
  # First stage container to generate the keyfile
  mongo-setup:
    image: mongo:6
    container_name: mongo-setup
    command: >
      bash -c "
        echo 'Creating keyfile for MongoDB replica set...' &&
        openssl rand -base64 756 > /tmp/mongodb-keyfile &&
        chmod 400 /tmp/mongodb-keyfile &&
        cp /tmp/mongodb-keyfile /data/mongodb-keyfile &&
        chown 999:999 /data/mongodb-keyfile &&
        echo 'Keyfile created successfully!'
      "
    volumes:
      - mongo_keyfile:/data
    networks:
      - app-network

  # Main MongoDB service
  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongo_data:/data/db
      - mongo_keyfile:/opt/keyfile:ro
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    command: >
      mongod --bind_ip_all --replSet rs0 --keyFile /opt/keyfile/mongodb-keyfile --auth
    depends_on:
      - mongo-setup
    healthcheck:
      test: ["CMD", "bash", "-c", "mongosh admin --eval \"try { rs.status().ok } catch(err) { rs.initiate({_id:'rs0', members: [{_id:0, host:'mongo:27017'}]}).ok }\" --quiet -u root -p secret | grep -q 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  api-gateway:
    build:
      context: ./backend/src/api-gateway
      dockerfile: gateway.Dockerfile
    container_name: api-gateway
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=8000
      - BACKEND_MONOLITH_URL=http://backend:3000/
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: backend.Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://root:secret@mongo:27017/image-app?authSource=admin&replicaSet=rs0
    depends_on:
      mongo:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - app-network
    volumes:
      - ./backend/uploads:/usr/src/app/uploads

  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
  mongo_data:
  mongo_keyfile:
