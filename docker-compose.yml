version: '3.8'
# TODO: Fix replica set initialization
services:
  mongo:
  image: mongo:6
  container_name: mongo
  restart: always
  ports:
    - "27017:27017"
  environment:
    MONGO_INITDB_ROOT_USERNAME: root
    MONGO_INITDB_ROOT_PASSWORD: secret
  healthcheck:
    test: mongosh --eval "db.adminCommand('ping')"
    interval: 10s
    timeout: 30s
    retries: 5
  volumes:
    - mongo_data:/data/db
    - ./keyfile:/keyfile
    - ./setup_mongo.sh:/docker-entrypoint-initdb.d/setup_mongo.sh
  networks:
    - app-network
  command: >
    bash -c "
    chmod 400 /keyfile && 
    exec mongod --bind_ip_all --replSet rs0 --keyFile /keyfile --auth
    "

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
  api-gateway:
    build:
      context: ./backend/src/api-gateway
      dockerfile: gateway.Dockerfile
    container_name: api-gateway
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=8000
      - BACKEND_MONOLITH_URL=http://backend:3000/
    depends_on:
      - backend
    networks:
      - app-network
  backend:
    build:
      context: ./backend
      dockerfile: backend.Dockerfile
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://root:secret@mongo:27017/image-app?authSource=admin&replicaSet=rs0
    depends_on:
      - redis
      - mongo
    networks:
      - app-network
    volumes:
      - ./backend/uploads:/usr/src/app/uploads
  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    networks:
      - app-network
networks:
  app-network:
    driver: bridge
volumes:
  redis_data:
  mongo_data: